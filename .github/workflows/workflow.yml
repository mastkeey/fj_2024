name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Build with Gradle
        working-directory: lesson5
        run: ./gradlew clean build -x test

      - name: Run tests with coverage
        working-directory: lesson5
        run: ./gradlew test jacocoTestReport

      - name: Upload test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage-report
          path: lesson5/build/reports/jacoco/test/html/index.html

#  code-analysis:
#    name: Static Code Analysis
#    runs-on: ubuntu-latest
#    needs: build
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Run SonarCloud analysis
#        working-directory: lesson5
#        env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: |
#           ./gradlew sonarqube \
#           -Dsonar.projectKey=mastkeey_fj_2024 \
#           -Dsonar.organization=mastkeey \
#           -Dsonar.host.url=https://sonarcloud.io

  publish:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: [ build ]
    if: github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Docker registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Check if JAR file exists
        run: |
          if [ ! -f lesson5/build/libs/lesson5.jar ]; then
            echo "JAR file not found! Check if the build step created the file."
            exit 1
          fi

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository }}:latest -f lesson5/Dockerfile .

      - name: Push Docker image to GitHub Packages
        run: docker push ghcr.io/${{ github.repository }}:latest